---
- file:
    state: directory
    path: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}/snippets"
    recurse: yes
    owner: root
    group: root
    mode: '0777'

- name: Copy snippets
  include_role:
    name: toni.openresty
    tasks_from: snippets
  vars:
    nginx_conf_dir: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}"
    override_nginx_conf_dir: "/etc/nginx"
    nginx_snippets:
      - { srcname: "auth.conf.j2", destname: "auth.conf" } 
      - { srcname: "proxy.conf.j2", destname: "proxy.conf" }
      - { srcname: "ssl.conf.j2", destname: "ssl.conf" }  
      - { srcname: "logs.conf.j2", destname: "logs.conf" }    
    
# It does not make much sense to do this on every host, dhparam can be reused!
# https://security.stackexchange.com/questions/70831/does-dh-parameter-file-need-to-be-unique-per-private-key
- name: Register dhparam file
  stat:
    path: "{{ role_path }}/templates/dhp-4096.pem"
  register: dhparam_file_path
 #delegate_to: localhost

- name: Generating dhparam (It takes some time !)
  when: not dhparam_file_path.stat.exists or dhparam_force|bool == true
  shell: "openssl dhparam -out {{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}/dhp-4096.pem 4096"
#  delegate_to: localhost

- name: Copy dhparam to role
  when: not dhparam_file_path.stat.exists
  synchronize:
    mode: pull
    src: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}/dhp-4096.pem"
    dest: "{{ role_path }}/templates/dhp-4096.pem"

- name: Copy dhparam from role
  when: dhparam_file_path.stat.exists
  synchronize:
    mode: pull
    src: "{{ role_path }}/templates/dhp-4096.pem"
    dest: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}/dhp-4096.pem"

- name: Copy start script
  copy:
    src: ./start
    dest: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}"

#https://raw.githubusercontent.com/api7/lua-resty-ipmatcher/master/resty/ipmatcher.lua
- name: Deploy ipmatcher
  template:
    src: openresty/ipmatcher.lua
    dest: "{{ user_path }}/docker/build/{{ item.name }}/{{ item.tag }}/ipmatcher.lua"